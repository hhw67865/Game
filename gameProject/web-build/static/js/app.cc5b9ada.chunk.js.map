{"version":3,"sources":["Login.js","Constants.js","Head.js","Food.js","Tail.js","GameLoop.js","Game.js","Gameover.js","CreateAccount.js","ManageAccount.js","App.js"],"names":["Login","navigation","useState","username","setUsername","password","setPassword","incorrect","setIncorrect","View","style","styles","container","Text","white","Image","width","height","source","uri","display","flexDirection","color","underline","TextInput","value","onChange","e","target","input","placeholder","secureTextEntry","Button","fontFamily","fontSize","title","onPress","fetch","method","headers","body","JSON","stringify","toLowerCase","then","r","json","profile","user","navigate","setTimeout","paddingTop","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","margin","borderWidth","borderRadius","textAlign","paddingBottom","fontWeight","Dimensions","get","Head","position","size","left","top","Food","Tail","elements","tailList","map","el","idx","Constants","score","randomPositions","min","max","Math","floor","random","entities","events","dispatch","head","food","tail","length","forEach","yspeed","xspeed","nextMove","updateFrequency","pop","Game","route","BoardSize","engine","useRef","isGameRunning","setIsGameRunning","replay","setReplay","resetGame","document","removeEventListener","keyboard","current","swap","renderer","key","useEffect","addEventListener","canvas","ref","systems","GameLoop","running","onEvent","alert","user_id","params","id","controlContainer","controllerRow","TouchableOpacity","right","controlBtn","transform","rotateY","rotateX","zIndex","GameOver","users","setUsers","scores","setScores","data","scoreArray","name","userArray","text","scoreExpression","prev","font","FlatList","slice","renderItem","item","paddingLeft","borderBottomColor","borderBottomWidth","borderStyle","fontStyle","textShadowColor","textShadowOffset","CreateAccount","setUserName","setName","alignContent","gap","marginTop","boardUnderLineColor","ManageAccount","goBack","button","marginBottom","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","component","options","headerShown","red"],"mappings":"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","file":"static/js/app.cc5b9ada.chunk.js","sourcesContent":["// import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, TextInput, Button, Image} from 'react-native';\nimport React, { useState } from \"react\";\n\nexport default function Login({navigation}) {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [incorrect, setIncorrect] = useState(false)\n  \n  \n  return (\n    <>\n      <View style={styles.container}>\n        <Text style={styles.white}>Snake ⚕ Hog</Text> \n        <Image style={{width: 260, height: 100}} source={{uri: \"https://media3.giphy.com/media/gKzh28guQs9u3A6e5k/giphy.gif?cid=ecf05e47ks3189cld4c6lil0ypo23d5jtx64b3j1dfv230u1&rid=giphy.gif&ct=g\"}}/>\n        <View style={{display: \"flex\", flexDirection:\"row\",}}>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n          <Image style= {{width: 20, height: 20}} source={{uri:\"https://media1.giphy.com/media/l3vRbzPPasY0Dz4Q0/giphy.gif?cid=ecf05e47n5090byc80xyy9gojzqbt0piajxrrp33rd2hikht&rid=giphy.gif&ct=g\"}}/>\n        </View>\n        <Text style={incorrect?{color:\"red\", display:\"block\"}:{color:\"red\", display:\"none\"}}>*Incorrect username or password*</Text>\n        <View style={styles.underline}>\n        <TextInput value={username} onChange={(e)=>{setUsername(e.target.value)}} style={styles.input} placeholder=\"Username\" />          \n        <TextInput value={password} onChange={(e)=>{setPassword(e.target.value)}} secureTextEntry={true} style={styles.input} placeholder=\"Password\"/>\n        </View>\n        <Button \n          style={{fontFamily: \"monospace\", fontSize: 15}}\n            color=\"#5F6F94\"\n            title=\"Login\"\n            onPress={() => {\n              fetch(`http://localhost:9393/login`, {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({username: username.toLowerCase(), password: password})\n              })\n              .then(r=>r.json())             \n              .then(profile=>{\n                if (profile) {\n                        if (profile.user.password === password) {\n                            setPassword(\"\")\n                            setUsername(\"\")\n                            navigation.navigate('Game', {profile:profile})\n                        }\n                        else {\n                            setPassword(\"\")\n                            setUsername(\"\")\n                            setIncorrect(true);\n                            setTimeout(()=>setIncorrect(false),3000)\n                        }\n                    }\n                    else {\n                        setPassword(\"\")\n                        setUsername(\"\")\n                        setIncorrect(true);\n                        setTimeout(()=>setIncorrect(false),3000)\n                    }\n              })\n\n              \n              \n            }}\n            />\n\n            <Text onPress={()=>navigation.navigate('CreateAccount')} style={{paddingTop: 15, fontFamily:'monospace',}}> Have no account? Create one </Text>\n      </View>\n    </>\n  )\n  }\n  const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#97D2EC',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 100,\n        margin: 12,\n        borderWidth: 1,\n      },\n      input: {\n        backgroundColor: '#FEF5AC',\n        height: 40,\n        margin: 12,\n        borderRadius: 10,\n        textAlign: 'center',\n        fontFamily:'monospace',\n      },\n      white:{\n        color: \"white\",\n        fontSize: 50,\n        paddingBottom: 10,\n        paddingTop: 10,\n        fontFamily:'monospace',\n        fontWeight:900,\n      },\n      // underline:{\n      //     borderBottomColor: \"#FFE5B4\",\n      //     borderBottomWidth: 1,\n      //     borderStyle: \"dotted\",\n      //     // borderWidth:10,\n      // }\n    });\n\n\n\n\n// export default function Login({navigation }) {\n\n//     const[username, setUsername] = useState(\"\")\n//     const[password, setPassword] = useState(\"\")\n//     const [incorrect, setIncorrect] = useState(false)\n\n//     let navigate = useNavigate();\n\n//     function handleTouch (e) {\n//         e.preventDefault();\n\n//         fetch(`http://localhost:9292/users/${username.toLowerCase()}`)\n//         .then(r=>r.json())\n//         .then(profile => {\n//             if (profile) {\n//                 if (profile.password === password) {\n//                     setUser(profile)\n//                     setLogin(true)\n//                     navigate(`/`)\n//                 }\n//                 else {\n//                     setIncorrect(true);\n//                     setTimeout(()=>setIncorrect(false),3000)\n//                 }\n//             }\n//             else {\n//                 setIncorrect(true);\n//                 setTimeout(()=>setIncorrect(false),3000)\n//             }\n//         })\n//     }\n//   return (\n//     <View style={styles.container}>\n//       <Text> Login!</Text>\n//       <TextInput  style={styles.input} placeholder=\"Username\" value={username} onChange={(e)=>{setUsername(e.target.value)}}/>          \n//       <TextInput  style={styles.input} type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>{setPassword(e.target.value)}}/>\n//     <Button title=\"Login\" onPress={handleTouch} color= {style.color}/>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n//   input: {\n//     height: 40,\n//     margin: 12,\n//     borderWidth: 1,\n//     padding: 10,\n//   },\n//   color:{\n//     color: '#2196F3'\n//   }\n// });\n\n// import {useState} from \"react\"\n// import {useNavigate} from 'react-router-dom'\n\n// function Login ({setUser, setLogin}) {\n//     const[username, setUsername] = useState(\"\")\n//     const[password, setPassword] = useState(\"\")\n//     const [incorrect, setIncorrect] = useState(false)\n\n//     let navigate = useNavigate();\n\n//     function handleSubmit (e) {\n//         e.preventDefault();\n\n//         fetch(`http://localhost:9292/users/${username.toLowerCase()}`)\n//         .then(r=>r.json())\n//         .then(profile => {\n//             if (profile) {\n//                 if (profile.password === password) {\n//                     setUser(profile)\n//                     setLogin(true)\n//                     navigate(`/`)\n//                 }\n//                 else {\n//                     setIncorrect(true);\n//                     setTimeout(()=>setIncorrect(false),3000)\n//                 }\n//             }\n//             else {\n//                 setIncorrect(true);\n//                 setTimeout(()=>setIncorrect(false),3000)\n//             }\n//         })\n//     }\n\n//     return (\n//         <form id = \"login-box\" onSubmit={handleSubmit}>\n//             <h1>LOG IN</h1>\n//                 <h3>TO DIG YOUR TREASURES💰</h3>\n//                 <p style={incorrect?{color: \"red\", display: \"block\"}:{color: \"red\", display: \"none\"}}>*Incorrect username or password*</p>\n//             <div className=\"input-box\">\n//                 <i className=\"fa-solid fa-user fa-lg\"></i>\n//                 <input type = \"text\" placeholder=\"Username\" value={username} onChange={(e)=>{setUsername(e.target.value)}}/>\n//             </div>\n//             <div className=\"input-box\">\n//                 <i className=\"fa-solid fa-lock fa-lg\"></i>\n//                 <input type = \"password\" placeholder=\"Password\" value={password} onChange={(e)=>{setPassword(e.target.value)}}/>\n//             </div>\n//             <button type=\"submit\">Login</button>\n//         </form>\n//     )\n\n// }\n// #login-box{\n//     /* border: 2px solid brown; */\n//     background: rgba(149,104,70, 0.6);\n//     text-align: center;\n//     margin: 0,auto;\n//     width: 360px;\n//     height: 400px;\n//   }\n//   h3{\n//     color: #fff;\n//     padding-bottom: 40px;\n//   }\n//   #login-box h1 {\n//     padding-top: 60px;\n//     color: #fff;\n//     font-weight: 600;\n//   }\n  \n//   #login-box .input-box{\n//     margin-top: 15px;\n//     /* border: 2px solid red; */\n//   }\n  \n//   #login-box .input-box input{\n//     border: none;\n//     background: none;\n//     border-bottom: #fff 2px solid;\n//     padding: 5px 10px;\n//     outline: none;\n//     color: #fff;\n//   }\n  \n//   #login-box button{\n//     margin-top: 30px;\n//     width: 80px;\n//     height: 30px;\n//     border-radius: 15px;\n//     outline: none;\n//     border: none;\n//     color:#fff ;\n//     background: rgb(149,104,70);\n//   }\n  \n//   #login-box button:hover{\n//     background: #FF8400;\n//   }\n  \n//   .fa-solid{\n//     color :#fff;\n//     display: inline;\n//     margin-right: 5px;\n//     /* border: 2px solid red; */\n//   }\n","import { Dimensions } from \"react-native\";\nexport default {\n  MAX_WIDTH: Dimensions.get(\"screen\").width,\n  MAX_HEIGHT: Dimensions.get(\"screen\").height,\n  GRID_SIZE: 18,\n  CELL_SIZE: 20\n};","import React from \"react\";\nimport { View, Image } from \"react-native\";\nexport default function Head({ position, size }) {\n  return (\n    <View\n      // style={{\n      //   width: size,\n      //   height: size,\n      //   backgroundColor: \"#EB6440\",\n      //   position: \"absolute\",\n      //   left: position[0] * size,\n      //   top: position[1] * size,\n      // }}\n    >\n      <Image     \n        style={{\n          width: size,\n          height: size,\n          position: \"absolute\",\n          left: position[0] * size,\n          top: position[1] * size\n        }}\n        source={{uri:\"https://media1.giphy.com/media/LlhmZySdrqJm2gDbHL/giphy.gif?cid=790b7611d54cc455068f9f931cb7606f2e32e4f7dbeeb2a4&rid=giphy.gif&ct=s\"}}/>\n    </View>\n  );\n}","import React from \"react\";\nimport { View, Image } from \"react-native\";\n\nexport default function Food({ position, size }) {\n  return (\n    <View\n      // style={{\n      //   width: size,\n      //   height: size,\n      //   backgroundColor: \"#497174\",\n      //   position: \"absolute\",\n      //   left: position[0] * size,\n      //   top: position[1] * size,\n      //   borderRadius: 50\n      // }}\n    >\n      <Image     \n        style={{\n          width: size,\n          height: size,\n          position: \"absolute\",\n          left: position[0] * size,\n          top: position[1] * size,\n        }}\n        source={{uri:\"https://media1.giphy.com/media/oHJdcg8iPUFtt4ks9y/giphy.gif\"}}/>\n    </View>\n  );\n}","import React from \"react\";\nimport { View,Image } from \"react-native\";\nimport Constants from \"./Constants\";\nexport default function Tail({ elements, position, size }) {\n  const tailList = elements.map((el, idx) => (\n    <Image\n      key={idx}\n      style={{\n        width: size,\n        height: size,\n        position: \"absolute\",\n        left: el[0] * size,\n        top: el[1] * size,\n        // backgroundColor: \"#EB6440\",\n      }}\n      source = {{uri:\"https://media2.giphy.com/media/L9IwIhfHg7xMSqvCYK/giphy.gif?cid=ecf05e476y27lldh398zrxv4enu5ihva8e3tn2pnzrdbh6jg&rid=giphy.gif&ct=s\"}}\n    />\n  ));\n  return (\n    <View\n      style={{\n        width: Constants.GRID_SIZE * size,\n        height: Constants.GRID_SIZE * size,\n      }}\n    >\n      {tailList}\n    </View>\n  );\n}","import Constants from \"./Constants\";\nlet score = 0;\nconst randomPositions = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n  function resetScore () {\n    score = 0;\n  }\n\n  export default function (entities, { events, dispatch }) {\n    const head = entities.head;\n    const food = entities.food;\n    const tail = entities.tail;\n    \n  if (events.length) {\n    events.forEach((e) => {\n      switch (e) {\n        case \"move-up\":\n          if (head.yspeed === 1) return;\n          head.yspeed = -1;\n          head.xspeed = 0;\n          return;\n        case \"move-right\":\n          if (head.xspeed === -1) return;\n          head.xspeed = 1;\n          head.yspeed = 0;\n          // ToastAndroid.show(\"move right\", ToastAndroid.SHORT);\n          return;\n        case \"move-down\":\n          if (head.yspeed === -1) return;\n          // ToastAndroid.show(\"move down\", ToastAndroid.SHORT);\n          head.yspeed = 1;\n          head.xspeed = 0;\n          return;\n        case \"move-left\":\n          if (head.xspeed === 1) return;\n          head.xspeed = -1;\n          head.yspeed = 0;\n          // ToastAndroid.show(\"move left\", ToastAndroid.SHORT);\n          return;\n      }\n    });\n  }\n  head.nextMove -= 1;\n  if (head.nextMove === 0) {\n    head.nextMove = head.updateFrequency;\n    if (\n      head.position[0] + head.xspeed < 0 ||\n      head.position[0] + head.xspeed >= Constants.GRID_SIZE ||\n      head.position[1] + head.yspeed < 0 ||\n      head.position[1] + head.yspeed >= Constants.GRID_SIZE\n    ) {\n      dispatch(\"game-over\");\n    } else {\n      tail.elements = [[head.position[0], head.position[1]], ...tail.elements];\n      tail.elements.pop();\n      head.position[0] += head.xspeed;\n      head.position[1] += head.yspeed;\n      tail.elements.forEach((el, idx) => {\n        \n        if (\n          head.position[0] === el[0] &&\n          head.position[1] === el[1] \n        )\n          dispatch(\"game-over\");\n          \n      });\n      if (\n        head.position[0] == food.position[0] &&\n        head.position[1] == food.position[1]\n      ) {\n        tail.elements = [\n          [head.position[0], head.position[1]],\n          ...tail.elements,\n        ];\n\n        food.position = [\n          randomPositions(0, Constants.GRID_SIZE - 1),\n          randomPositions(0, Constants.GRID_SIZE - 1),\n        ]\n        score ++;\n        \n        \n        ;\n      }\n    }\n  }\n  return entities;\n}\n\nexport {score, resetScore}\n","import { Image, StyleSheet, Text, View, TextInput, Button, TouchableOpacity} from 'react-native';\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { GameEngine } from \"react-native-game-engine\";\n// import Sound from 'react-native-sound';\nimport Constants from \"./Constants\";\nimport Head from \"./Head\";\nimport Food from \"./Food\";\nimport Tail from \"./Tail\";\nimport GameLoop, {resetScore, score} from \"./GameLoop\";\n\n\n\nexport default function Game ({navigation,route}) {\n  \n    \n    const BoardSize = Constants.GRID_SIZE * Constants.CELL_SIZE;\n    const engine = useRef(null);\n    const [isGameRunning, setIsGameRunning] = useState(true);\n    const [replay, setReplay] = useState(true)\n\n\n    const randomPositions = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    };\n\n    const resetGame = () => {\n      document.removeEventListener(\"keydown\", keyboard)\n      engine.current.swap({\n        head: {\n          position: [0, 0],\n          size: Constants.CELL_SIZE,\n          updateFrequency: 10,\n          nextMove: 10,\n          xspeed: 0,\n          yspeed: 0,\n          renderer: <Head />,\n        },\n        food: {\n          position: [\n            randomPositions(0, Constants.GRID_SIZE - 1),\n            randomPositions(0, Constants.GRID_SIZE - 1),\n          ],\n          size: Constants.CELL_SIZE,\n          updateFrequency: 10,\n          nextMove: 10,\n          xspeed: 0,\n          yspeed: 0,\n          renderer: <Food />,\n        },\n        tail: {\n          size: Constants.CELL_SIZE,\n          elements: [],\n          renderer: <Tail />,\n        },\n      });\n      setIsGameRunning(true);\n    };\n    function keyboard (e) {\n      // console.log(e.key)\n      switch (e.key) {\n        case \"ArrowLeft\":\n          engine.current.dispatch(\"move-left\")\n          break\n        case \"ArrowRight\":\n          engine.current.dispatch(\"move-right\")\n          break\n        case \"ArrowUp\":\n          engine.current.dispatch(\"move-up\")\n          break\n        case \"ArrowDown\":\n          engine.current.dispatch(\"move-down\")\n          break\n      }\n    }\n\n      useEffect(()=>{\n        document.addEventListener(\"keydown\", keyboard)\n        \n      },[replay])\n      \n    return (\n      <View style={styles.canvas}>\n        <GameEngine\n          ref={engine}\n          style={{\n            width: BoardSize,\n            height: BoardSize,\n            flex: null,\n            backgroundColor: \"#FFE5B4\",\n            fontFamily:'monospace',\n          }}\n          entities={{\n            head: {\n              position: [0, 0],\n              size: Constants.CELL_SIZE,\n              updateFrequency: 10,\n              nextMove: 10,\n              xspeed: 0,\n              yspeed: 0,\n              renderer: <Head />,\n            },\n            food: {\n              position: [\n                randomPositions(0, Constants.GRID_SIZE - 1),\n                randomPositions(0, Constants.GRID_SIZE - 1),\n              ],\n              size: Constants.CELL_SIZE,\n              renderer: <Food />,\n            },\n            tail: {\n              size: Constants.CELL_SIZE,\n              elements: [],\n              renderer: <Tail />,\n            },\n          }}\n          systems={[GameLoop]}\n          running={isGameRunning}\n          onEvent={(e) => {\n            switch (e) {\n              case \"game-over\":\n                alert(\"Game over!\");\n                \n                setIsGameRunning(false);\n                \n                // play();\n                fetch (`http://localhost:9393/scores`, {\n                  method: \"POST\",\n                  headers: {\"Content-Type\": \"application/json\"},\n                  body: JSON.stringify({user_id: route.params.profile.user.id, score: score})\n                })\n                .then ( r => r.json())\n                .then (()=>{\n                  navigation.navigate('Gameover', {profile: route.params.profile, score: score, resetGame: resetGame, setReplay: setReplay})\n                  resetScore();\n                  return;\n                } )\n                \n            }\n\n          }}\n        />\n\n     {/* {!isGameRunning && (\n        <Button \n        color=\"#231955\"\n        title=\"Game over\"\n        onPress={() => navigation.navigate('Gameover')}\n        />\n       <View \n        style={{\n          position:\"flex\",\n          // bottom: 300,\n          alignItems:\"center\",\n          zIndex:3,\n          padding:10,\n          fontSize: 32,\n          backgroundColor: \"#1F4690\",\n          borderRadius: 30,\n        }}\n        >\n          <TouchableOpacity onPress={resetGame}>\n            <Text style={{color:\"white\"}}>Start New Game</Text>\n          </TouchableOpacity>\n      </View>\n      )} */}\n        <View style={styles.controlContainer}>\n        <View style={styles.controllerRow}>\n          <TouchableOpacity onPress={() => engine.current.dispatch(\"move-up\")}>\n          <Image style={{width: 18, height: 24}} source={{uri:\"https://www.shareicon.net/data/2015/08/24/90324_arrow_512x512.png\"}}/>\n            {/* <View style={styles.controlBtn} /> */}\n          </TouchableOpacity>\n        </View>\n        <View style={styles.controllerRow}>\n          <TouchableOpacity\n            onPress={() => engine.current.dispatch(\"move-left\")}\n          >\n            {/* <View style={styles.controlBtn} /> */}\n            <Image style= {{width: 16, height: 12, right: 6 }} source={{uri: \"http://cdn.onlinewebfonts.com/svg/img_77631.png\"}}/>\n          </TouchableOpacity>\n          <View style={[styles.controlBtn, { backgroundColor: null }]} />\n          <TouchableOpacity\n            onPress={() => engine.current.dispatch(\"move-right\")}\n          >\n            {/* <View style={styles.controlBtn} /> */}\n            <Image style= {{width: 16, height: 12, left: 6, transform:[{rotateY: '180deg'}]}} source={{uri: \"http://cdn.onlinewebfonts.com/svg/img_77631.png\"}}/>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.controllerRow}>\n          <TouchableOpacity\n            onPress={() => engine.current.dispatch(\"move-down\")}\n          >\n            {/* <View style={styles.controlBtn} /> */}\n            <Image style={{width: 18, height: 24, transform:[{rotateX: '180deg'}]}} source={{uri:\"https://www.shareicon.net/data/2015/08/24/90324_arrow_512x512.png\"}}/>\n          </TouchableOpacity>\n        </View>\n      </View>\n      </View> \n    )\n  }\n\n  const styles = StyleSheet.create({\n  canvas: {\n    flex: 1,\n    backgroundColor: \"D6E4E5\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 60,\n    fontFamily:'monospace',\n  },\n  controlContainer: {\n    zIndex: 2,\n    position: \"relative\",\n    right:-150,\n    top: -60,\n  },\n  controllerRow: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  // controlBtn: {\n  //   backgroundColor: \"#EFF5F5\",\n  //   width: 20,\n  //   height: 20,\n  // },\n});","import {Animated, FlatList, Button, StyleSheet, Text, View, Image } from 'react-native';\nimport React, { useState, useEffect, useRef } from \"react\";\n\nexport default function GameOver ({navigation, route}) {\nconst [users, setUsers] = useState([])\nconst [scores, setScores] = useState([])\n\n\nuseEffect( () =>{\n  fetch (`http://localhost:9393/users/${route.params.profile.user.id}/highestscores`)\n  .then ( r => r.json())\n  .then ( data => setUsers(data))\n  },[])\n\nuseEffect( () =>{\n  fetch ('http://localhost:9393/scores/highestscores')\n  .then ( r => r.json())\n  .then ( data => setScores(data))\n  },[])\n\n  const scoreArray = scores.map((score,id) =>{\n    return `${id+1}. ${score.score} --- ${score.name}`\n\n  })\n  const userArray = users.map((user,id)=>{\n    return `${id+1}. ${user.score}`\n  })\n\n  function scoreExpression (score) {\n    if (score===0) {\n      return `${route.params.profile.user.name} ate no hogs! Stay Hungry.`\n    }\n    if (score===1) {\n      return `${route.params.profile.user.name} ate only one hog! Seriously?`\n    }\n    if (score>=2 && score<4) {\n      return `${route.params.profile.user.name} ate ${score} hogs! You might not survive the winter...`\n    }\n    if (score>=4 && score<7) {\n      return `${route.params.profile.user.name} ate ${score} hogs! You will probably survive...`\n    }\n    if (score>=7) {\n      return `${route.params.profile.user.name} ate ${score} hog! The other snakes respect you!`\n    }\n  }\n\n  // const translation = useRef(new Animated.Value(0)).current;\n\n  // useEffect(() => {\n  //   for (let i = 0; i < 50; i++) {\n  //     setTimeout(() => {\n  //       translation.setValue(i);\n  //     }, 25 * i);\n  //   }\n  // }, []);\n\n    return (\n      <View style={styles.container} >\n        {/* <Animated.View style={{ transform: [{ translateY: translation }]}}> </Animated.View> */}\n        <Image style= {{width: 250, height: 80}} source={{uri:\"https://media2.giphy.com/media/IpXPcJpZZvpW5G9KH2/giphy.gif?cid=ecf05e47e60s4hx8hy05ef5cmk46oiasopn4hv7vpon7snm3&rid=giphy.gif&ct=g\"}}/>\n        <Text style={styles.text} >Game Over!</Text>\n        <Text style={{textAlign:\"center\", color:\"grey\", paddingBottom: 10, fontSize:18, fontFamily:'monospace', fontWeight: 400}}>\n          { \n          scoreExpression( route.params.score )\n          // You ate {route.params.score} food \n          }\n          </Text>\n        <View>\n          <Button onPress={()=>{\n            route.params.resetGame();\n            route.params.setReplay(prev=>!prev)\n            navigation.navigate('Game', {profile:route.params.profile})\n            }} title=\"Play Again?\">\n          </Button>\n        </View>\n        {/* <View style={styles.underline}></View> */}\n        <View style={{display:\"flex\", flexDirection:\"row\", paddingTop: 20}}>\n         \n          <View style={{width:\"50%\"}}>\n            <Text style={styles.font}>Highscores!</Text>\n                <FlatList\n                style={styles.font}\n                data={ scoreArray.slice(0,5) }\n                renderItem={({item}) => <Text>{item}</Text>}\n              />\n          </View>\n\n          <View style={{paddingLeft: 30}}>\n              <Text style={styles.font}>Your Highscores!</Text>\n              <FlatList\n              style={styles.font}\n                data={ userArray.slice(0,5) }\n                renderItem={({item}) => <Text >{item}</Text>}\n              />\n          </View> \n            \n        </View>\n        <View >\n          {/* <Text > Manage Account</Text>  */}\n          <Text style = {{paddingTop: 20, fontSize: 14, color:\"#E8AA42\", fontWeight: 600}} \n          onPress={()=>{navigation.navigate('ManageAccount', {profile: route.params.profile, resetGame: route.params.resetGame})}}\n          >---- Click to Manage Your Account ---- </Text>\n        </View>\n      </View>\n    )\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      display:\"flex\",\n      // flexDirection:\"column\",\n      alignItems:\"center\",\n      justifyContent: \"center\"\n    },\n    underline:{\n      borderBottomColor: \"#FFE5B4\",\n      borderBottomWidth: 1,\n      borderStyle: \"dotted\",\n      // borderWidth:10,\n    },\n    font:{\n      fontStyle:\"oblique\", \n      fontSize: 20,\n      fontFamily:'monospace',\n      fontWeight: 400\n    },\n    text: {\n      fontSize: 70,\n      color: \"#25316D\",\n      textShadowColor: \"#E8AA42\", \n      textShadowOffset:{width: 5, height:2},\n      paddingBottom: 10,\n      // textDecorationLine:\"line-through\",\n      // fontFamily:'monospace',\n      fontWeight: 900,\n    }\n  });\n  ","import { StyleSheet, Text, View, TextInput, Button} from 'react-native';\nimport React, { useState } from \"react\";\n\nexport default function CreateAccount({navigation}){\n    const [username, setUserName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [incorrect, setIncorrect] = useState(false)\n    \n    const handleSubmit=()=>{\n\n        fetch ('http://localhost:9393/users',{\n          method: 'POST',\n          headers: {\n         'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n                username: username.toLowerCase(),\n                password: password,\n                name: name\n             })\n          })\n        .then ( r => r.json())\n        .then ( profile => {\n            if (profile) {\n                navigation.navigate('Login')\n            }\n            else {\n                setIncorrect(true);\n                setTimeout(()=>setIncorrect(false),3000)\n            }\n        })\n    }\n\n    return(\n        <View style={styles.container}> \n            <Text style={styles.text}>Create your Account</Text>\n            <Text style={incorrect?{color:\"red\", display:\"block\"}:{color:\"red\", display:\"none\"}}>*This username already exists*</Text>\n            <TextInput style={styles.input} value={username} placeholder='create your username...' onChange={e=>{setUserName(e.target.value)}}></TextInput>\n            <TextInput style={styles.input} value={password} placeholder='enter your password...' secureTextEntry={true} onChange={e=>{setPassword(e.target.value)}}></TextInput>\n            <TextInput style={styles.input} value={name} placeholder='enter your name...' onChange={e=>{setName(e.target.value)}}></TextInput>\n            <View style={{display:\"flex\", flexDirection: \"row\", alignContent:\"center\", gap: 60, marginTop: 10 }}>\n              <Text style={{fontSize: 28}} onPress={()=>{navigation.navigate('Login')}}> 🔙 </Text>\n              <Button title= \"Create\" color = \"#EB6440\" onPress={ handleSubmit} style={{borderRadius: 15}}></Button>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#D6E4E5',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 100,\n      margin: 12,\n      borderWidth: 1,\n    },\n    input: {\n      backgroundColor: '#fff',\n      width: 200,\n      boardUnderLineColor:\"#EB6440\",\n      height: 40,\n      margin: 12,\n      borderRadius: 10,\n      textAlign: 'center',\n      fontFamily:'monospace',\n      fontWeight: 200,\n    },\n\n   text:{\n      color: \"#497174\",\n      fontSize: 30,\n      paddingBottom: 30,\n      fontFamily:'monospace',\n      fontWeight: 1000,\n      textAlign:\"center\"\n    },\n  });","import { StyleSheet, Text, View, TextInput, Button, Image} from 'react-native';\nimport React, { useState } from \"react\";\n\n\n\nexport default function ManageAccount( {navigation, route} ){\n\n    const [password, setPassword] = useState('')\n    const [name, setName] = useState ('')\n\n    \n\n    const handleUpdate=( )=>{\n        if(password !== \"\") {\n            fetch ( `http://localhost:9393/users/${route.params.profile.user.id}`,{\n              method: 'PATCH',\n              headers: {\n             'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ password: password})\n              })\n            .then ( r => r.json())\n            .then ( password)\n\n        } \n        if (name !== \"\"){\n            fetch ( `http://localhost:9393/users/${route.params.profile.user.id}`,{\n                method: 'PATCH',\n                headers: {\n               'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({name: name})\n                })\n              .then ( r => r.json())\n              .then (name)\n        }\n        route.params.resetGame()\n        \n        navigation.navigate('Login')\n        \n    }\n\n    const handleDelete = ()=>{\n        fetch ( `http://localhost:9393/users/${route.params.profile.user.id}`,{\n            method: 'DELETE'})\n            .then(()=> {\n              route.params.resetGame()\n              \n              navigation.navigate('Login')})\n            \n    }\n\n    const handleLogout = () => {\n        route.params.resetGame()\n        \n        navigation.navigate('Login')\n    }\n\n    return(\n        <View style={styles.container}>\n            <Text  style ={styles.font}>Change Password</Text>\n            <TextInput value={password} onChange={(e)=>{setPassword(e.target.value)}} secureTextEntry={true} style={styles.input} placeholder=\"Password\"/>\n      \n            <Text style ={styles.font}>Change Name</Text>\n            <TextInput value={name} onChange={(e)=>{setName(e.target.value)}} style={styles.input} placeholder=\"Your Name\" />          \n            <View style={{display:\"flex\", flexDirection: \"row\", alignContent:\"center\", gap: 30, margin: 10 }}>\n              <Text style={{fontSize: 28}} onPress={()=>{navigation.goBack()}}> 🔙 </Text>\n              <Button title= \"Update\" color= \"#E8AA42\" onPress={ handleUpdate} style={styles.button}></Button>\n              <Text style={{fontSize: 28}} onPress = {handleLogout} title=\"Logout\">❌</Text>\n            </View>\n            <View style={{display: \"flex\", flexDirection: \"row\"}}>\n              <Image style= {{width: 70, height: 80}} source={{uri:\"https://media3.giphy.com/media/xUNemL2Yrwl6IoYWFa/giphy.gif?cid=790b76113c4341751e7d5835f431d48a407d6e37260719d1&rid=giphy.gif&ct=s\"}}/>\n              <Text onPress = {handleDelete} style={{textAlign:\"center\", marginTop: 20, color:\"#1F4690\", fontFamily:'monospace', fontWeight: 200,}}>delete this account T^T</Text>\n            </View>\n        </View>\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#FFE5B4',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 100,\n      margin: 12,\n      borderWidth: 1,\n      fontFamily:'monospace',\n    },\n    input: {\n      backgroundColor: '#97D2EC',\n      width: 200,\n      color:\"white\",\n      height: 40,\n      margin: 12,\n      borderRadius: 10,\n      textAlign: 'center',\n      fontFamily:'monospace',\n      fontWeight: 200,\n    },\n    font:{\n      color: \"#5F6F94\",\n      fontSize: 18,\n      paddingBottom: 5,\n      paddingTop: 10,\n      fontFamily:'monospace',\n      fontWeight: 900,\n    },\n    button: {\n        marginBottom : 20,\n        color: \"white\",\n    }\n  })","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Login from './Login'\nimport Game from './Game'\nimport GameOver from './Gameover';\nimport CreateAccount from './CreateAccount'\nimport ManageAccount from './ManageAccount';\nimport React, { useState, useEffect } from \"react\";\n\n\nconst Stack = createNativeStackNavigator();\n\n\nexport default function App() {\n  \n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Login\" component={Login} options={{headerShown: false}}/>\n        <Stack.Screen name=\"Game\" component={Game} options={{headerShown: false}}/>\n        <Stack.Screen name=\"Gameover\" component={GameOver} options={{headerShown: false}} />\n        <Stack.Screen name=\"CreateAccount\" component={CreateAccount} options={{headerShown: false}} />\n        <Stack.Screen name=\"ManageAccount\" component={ManageAccount} options={{headerShown: false}} />\n      </Stack.Navigator>\n    </NavigationContainer>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  red: {\n    color: 'red',\n  },\n});\n\n// To begin with, install the package to your project:\n\n// npm install --save react-native-game-engine"],"sourceRoot":""}